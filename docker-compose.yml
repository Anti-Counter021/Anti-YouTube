version: "3.7"

services:
  postgres:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=video
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    command: npm start
    depends_on:
      - api
      - postgres
      - worker
      - redis
    volumes:
      - ../frontend:/app/frontend
      - /app/frontend/node_modules
    ports:
      - "3000:3000"

  api:
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      - DOCKER=1
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    command: uvicorn app.app:app --host 0.0.0.0 --port 8000
    volumes:
      - ./:/site

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - postgres
      - api
      - frontend

  worker:
    build: ./
    command: celery -A app.tasks.celery worker -l INFO
    volumes:
      - ./:/site
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DOCKER=1
      - TESTS=0
    depends_on:
      - api
      - redis

  redis:
    image: redis:6-alpine
